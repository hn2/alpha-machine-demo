import gym


def make_env_pf_fx(data,
                   account_currency,
                   instruments,
                   lookback,
                   random_episode_start,
                   cash,
                   max_slippage_percent,
                   lot_size,
                   leverage,
                   pip_size,
                   pip_spread,
                   compute_position,
                   compute_indicators,
                   compute_reward,
                   meta_rl,
                   verbose):
    v_env = gym.make('gym_pf_fx:PfFxEnv-v0',
                     data=data,
                     account_currency=account_currency,
                     instruments=instruments,
                     lookback=lookback,
                     random_episode_start=random_episode_start,
                     cash=cash,
                     max_slippage_percent=max_slippage_percent,
                     lot_size=lot_size,
                     leverage=leverage,
                     pip_size=pip_size,
                     pip_spread=pip_spread,
                     compute_position=compute_position,
                     compute_indicators=compute_indicators,
                     compute_reward=compute_reward,
                     meta_rl=meta_rl,
                     verbose=verbose)

    return v_env


def make_env_pf_fx_qc(data,
                      start_date,
                      end_date,
                      number_of_instruments,
                      random_episode_start,
                      lookback,
                      args,
                      kwargs,
                      compute_position,
                      compute_indicators,
                      compute_reward,
                      meta_rl,
                      verbose):
    v_env = gym.make('gym_pf_fx_qc:PfFxEnvQC-v0',
                     data=data,
                     start_date=start_date,
                     end_date=end_date,
                     number_of_instruments=number_of_instruments,
                     random_episode_start=random_episode_start,
                     lookback=lookback,
                     args=args,
                     kwargs=kwargs,
                     compute_position=compute_position,
                     compute_indicators=compute_indicators,
                     compute_reward=compute_reward,
                     meta_rl=meta_rl,
                     verbose=verbose)

    return v_env


def make_env_pf_fx_new(data,
                       account_currency,
                       data_dir,
                       market,
                       resolution,
                       train_look_back_period,
                       instruments_all,
                       number_of_instruments_in_portfolio,
                       env_look_back_period,
                       random_episode_start,
                       cash,
                       max_slippage_percent,
                       lot_size,
                       leverage,
                       pip_size_all,
                       pip_spread,
                       compute_position,
                       compute_indicators,
                       compute_reward,
                       meta_rl,
                       verbose):
    v_env = gym.make('gym_pf_fx_new:PfFxEnvNew-v0',
                     data=data,
                     account_currency=account_currency,
                     data_dir=data_dir,
                     market=market,
                     resolution=resolution,
                     train_look_back_period=train_look_back_period,
                     instruments_all=instruments_all,
                     number_of_instruments_in_portfolio=number_of_instruments_in_portfolio,
                     env_look_back_period=env_look_back_period,
                     random_episode_start=random_episode_start,
                     cash=cash,
                     max_slippage_percent=max_slippage_percent,
                     lot_size=lot_size,
                     leverage=leverage,
                     pip_size_all=pip_size_all,
                     pip_spread=pip_spread,
                     compute_position=compute_position,
                     compute_indicators=compute_indicators,
                     compute_reward=compute_reward,
                     meta_rl=meta_rl,
                     verbose=verbose)

    return v_env


def make_env_pf_fx_goal(data,
                        instruments,
                        lookback,
                        random_episode_start,
                        cash,
                        max_slippage_percent,
                        lot_size,
                        leverage,
                        pip_size,
                        pip_spread,
                        compute_position,
                        compute_indicators,
                        compute_reward,
                        meta_rl,
                        verbose):
    v_env = gym.make('gym_pf_fx_goal:PfFxEnvGoal-v0',
                     data=data,
                     instruments=instruments,
                     lookback=lookback,
                     random_episode_start=random_episode_start,
                     cash=cash,
                     max_slippage_percent=max_slippage_percent,
                     lot_size=lot_size,
                     leverage=leverage,
                     pip_size=pip_size,
                     pip_spread=pip_spread,
                     compute_position=compute_position,
                     compute_indicators=compute_indicators,
                     compute_reward=compute_reward,
                     meta_rl=meta_rl,
                     verbose=verbose)

    return v_env


def make_env_choose_best_model(models_dir,
                               files_lookback_hours,
                               include_patterns,
                               delimeter,
                               deterministic,
                               data,
                               instruments,
                               lookback,
                               random_episode_start,
                               cash,
                               max_slippage_percent,
                               lot_size,
                               leverage,
                               pip_size,
                               pip_spread,
                               compute_position,
                               compute_indicators,
                               compute_reward,
                               meta_rl,
                               verbose):
    v_env = gym.make('gym_choose_best_model:ChooseBestModelEnv-v0',
                     models_dir=models_dir,
                     files_lookback_hours=files_lookback_hours,
                     include_patterns=include_patterns,
                     delimeter=delimeter,
                     deterministic=deterministic,
                     data=data,
                     instruments=instruments,
                     lookback=lookback,
                     random_episode_start=random_episode_start,
                     cash=cash,
                     max_slippage_percent=max_slippage_percent,
                     lot_size=lot_size,
                     leverage=leverage,
                     pip_size=pip_size,
                     pip_spread=pip_spread,
                     compute_position=compute_position,
                     compute_indicators=compute_indicators,
                     compute_reward=compute_reward,
                     meta_rl=meta_rl,
                     verbose=verbose)

    return v_env

# def create_env_pf_fx(data,
#                      features,
#                      instruments,
#                      lookback,
#                      random_episode_start,
#                      cash,
#                      max_slippage_percent,
#                      lot_size,
#                      leverage,
#                      pip_size,
#                      pip_spread,
#                      compute_position,
#                      compute_reward,
#                      meta_rl,
#                      verbose):
#     v_env = PfFxEnv(data=data,
#                     features=features.
#                     instruments=instruments,
#                     lookback=lookback,
#                     random_episode_start=random_episode_start,
#                     cash=cash,
#                     max_slippage_percent=max_slippage_percent,
#                     lot_size=lot_size,
#                     leverage=leverage,
#                     pip_size=pip_size,
#                     pip_spread=pip_spread,
#                     compute_position=compute_position,
#                     compute_indicators=compute_indicators,
#                     meta_rl=meta_rl,
#                     verbose=verbose)
#
#     return v_env
