#   https://docs.python.org/3/library/configparser.html
#   https://github.com/DLR-RM/rl-baselines3-zoo/tree/master/hyperparams

[default]

[paths_windows]
main_dir = C:\alpha-machine\
main_code_dir = src\drl-pf-fx-sb3
main_code_dir_train = train
main_code_dir_test = test
main_code_dir_tune = tune
models_dir = models\forex\oanda
logs_dir = logs\forex\oanda
data_dir = lean\data\forex
test_dir = test-oanda-sb3
stats_dir = stats

[paths_linux]
main_dir = /home/ubuntu/QuantConnect
main_code_dir = src/drl-pf-fx-sb3
main_code_dir_train = train
main_code_dir_test = test
main_code_dir_tune = tune
models_dir = models/forex/oanda
logs_dir = logs/forex/oanda
data_dir = lean/data/forex
test_dir = test-oanda-sb3
stats_dir = stats

[pf_fx_env]
env_lookback_period = 30
random_episode_start = True
cash = 1000
max_slippage_percent = 0.01
lot_size = Micro
leverage = 20
compute_position = long_and_short
#   long_only   short_only   long_and_short
compute_indicators = all
#   prices returns log_returns returns_hlc log_returns_hlc patterns returns_patterns_volatility momentum all misc
compute_reward = ['log_returns']
#   log_returns sharpe_ratio calmar_ratio sortino_ratio
meta_rl = True
env_verbose = False
num_of_envs = 1

[agent]
algorithms = ['DDPG']
model_verbose = True
callback_verbose = True
save_replay_buffer = False
use_tensorboard = False
use_callback = True
check_freq = 100
callback_lookback = 100
save_freq = 50000

#   a2c_params = ['learning_rate', 0.000005, 'n_steps', 512, 'ent_coef', 0.01]
#   ppo_params = ['learning_rate', 0.000005, 'n_steps', 512, 'batch_size', 512, 'ent_coef', 0.01]
#   ddpg_params = ['learning_rate', 0.000005, 'batch_size', 512, 'buffer_size', 100000, 'learning_starts', 20000, 'tau', 0.08, 'train_freq', 32, 'gradient_steps', 32, 'optimize_memory_usage', True]
#   dqn_params = ['learning_rate', 0.000005, 'batch_size', 512, 'buffer_size', 100000, 'learning_starts', 20000, 'tau', 0.08, 'train_freq', 32, 'gradient_steps', 32, 'optimize_memory_usage', True]
#   sac_params = ['learning_rate', 0.000005, 'batch_size', 512, 'buffer_size', 100000, 'learning_starts', 20000, 'tau', 0.08, 'train_freq', 32, 'gradient_steps', 32, 'use_sde', True, 'use_sde_at_warmup', True, 'optimize_memory_usage', True]
#   td3_params = ['learning_rate', 0.000005, 'batch_size', 512, 'buffer_size', 100000, 'learning_starts', 20000, 'tau', 0.08, 'train_freq', 32, 'gradient_steps', 32, 'optimize_memory_usage', True]

;a2c_params = ['learning_rate', 0.00001, 'n_steps', 32]
;ppo_params = ['learning_rate', 0.00001, 'n_steps', 256, 'batch_size', 32]
;ddpg_params = ['learning_rate', 0.00001, 'batch_size', 32, 'optimize_memory_usage', True]
;dqn_params = ['learning_rate', 0.00001, 'batch_size', 32, 'optimize_memory_usage', True]
;sac_params = ['learning_rate', 0.00001, 'batch_size', 32, 'optimize_memory_usage', True]
;td3_params = ['learning_rate', 0.00001, 'batch_size', 32, 'optimize_memory_usage', True]

a2c_params = ['learning_rate', 0.00001, 'n_steps', 32]
ppo_params = ['learning_rate', 0.00001, 'n_steps', 512, 'batch_size', 32]
ddpg_params = ['learning_rate', 0.00001, 'batch_size', 32, 'optimize_memory_usage', True]
dqn_params = ['learning_rate', 0.00001, 'batch_size', 32, 'optimize_memory_usage', True]
sac_params = ['learning_rate', 0.00001, 'batch_size', 32, 'optimize_memory_usage', True]
td3_params = ['learning_rate', 0.00001, 'batch_size', 32, 'optimize_memory_usage', True]

;a2c_params = ['learning_rate', 0.00001]
;ppo_params = ['learning_rate', 0.00001]
;ddpg_params = ['learning_rate', 0.00001]
;dqn_params = ['learning_rate', 0.00001]
;sac_params = ['learning_rate', 0.00001]
;td3_params = ['learning_rate', 0.00001]

net_arch = [512, 512, 512, 512]
use_linear_schedule = False
action_noise = ['None']
#   None   NormalActionNoise   OrnsteinUhlenbeckActionNoise
noise_sigma = 0.1
use_sde = True

[model]
delimeter = -
model_prefix = fx_sb3_

[train]
#   DQN - only discrete action spaces
#   algorithms = ['PPO', 'A2C', 'SAC', 'DDPG', 'TD3']
number_of_trials = 100
train_look_back_period = 20000
total_timesteps = 132100
subdir = prod
train_test_split = 1
market = oanda
resolution = minute
num_of_instruments = ['7']
spread = 2

[optuna]
num_of_instruments = 7
spread = 2
market = oanda
subdir = prod
resolution = daily
train_look_back_period = 5000
train_test_split = 0.8
#   connection_url = mysql+mysqlconnector://hannan:dD33dD33@localhost:3306/optuna
connection_url = mysql+mysqlconnector://hannan:dD33dD33@optuna.cluster-cu3liabuijge.us-east-1.rds.amazonaws.com:3306/optuna